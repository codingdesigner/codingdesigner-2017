////
/// @group Typography
////

// SET FONTS

/// site body font
/// @type font family string
$font-body: get-font(sans-serif);

/// site headline font
/// @type font family string
$font-headline: get-font(sans-serif);

// SET ROOT TYPE SIZES AND LINE HEIGHTS

/// site root type size
/// @type px
$root-typesize: 16px;

/// Use fluid type sizes on the root element?
/// @type boolean
$use-fluid-type: true;

/// site minimum type size
/// @type px
$root-typesize--min: 14px;

/// baseline size in pixels
/// set as a multiplier of `$root-typesize`
/// default is `1.5`
/// @type px
$base-line-px: $root-typesize * 1.5;

/// baseline size in ems
/// @type em - calculated
$base-line-em: em($base-line-px);

/// baseline size w/o unit
/// @type number - calculated
$base-line-height-unitless: unitless-convert($base-line-em);

// SET TYPOGRAPHIC SCALE
// Either use Sassy Modular Scale or
// Set each value manually

/// Choose to use __Sassy Modular Scale__?
/// @link http://www.modularscale.com
/// @type bool
$use-modular-scale: true;

/// __Sassy Modular Scale__ base size
/// @link https://github.com/modularscale/modularscale-sass
/// @type px | em
$ms-base: em($root-typesize);

/// __Sassy Modular Scale__ ratio
/// @link https://github.com/modularscale/modularscale-sass
/// @link defined ratios https://github.com/modularscale/modularscale-sass#ratios
/// @type ratio | decimal | defined ratio
$ms-ratio: $major-third;

$font-sizes: ();
// sass-lint:disable indentation
@if ($use-modular-scale == true) {
  /// Font sizes map
  /// * __if using modular scale__
  /// * Define font sizes in one list for tighter typographic control
  ///
  /// @example   Apply font sizes using the `get-font-size()` function
  ///   `font-size: get-font-size(1);`
  /// @type Map
  $font-sizes: (
    -4: ms(-4),
    -3: ms(-3),
    -2: ms(-2),
    -1: ms(-1),
    0: ms(0), // $root-typesize
    1: ms(1),
    2: ms(2),
    3: ms(3),
    4: ms(4),
    5: ms(5),
    6: ms(6),
    7: ms(7),
    8: ms(8),
    9: ms(9),
    10: ms(10)
  );
} @else {
  /// Font sizes map
  /// * __if NOT using modular scale__
  /// * Define font sizes in one list for tighter typographic control
  ///
  /// @example   Apply font sizes using the `get-font-size()` function
  ///   `font-size: get-font-size(1);`
  /// @type Map
  $font-sizes: (
    -4: em(10px),
    -3: em(12px),
    -2: em(14px),
    -1: em(15px),
    0: 1em, // $root-typesize
    1: em(21px),
    2: em(22px),
    3: em(26px),
    4: em(27px),
    5: em(48px),
    6: em(56px),
    7: em(64px),
    8: em(72px),
    9: em(88px),
    10: em(96px)
  );
}
// sass-lint:enable indentation

/// Allow Heading mixins to calculate top and bottom margins
$headings-calc-margins: true;

/// default heading color
/// @type color
$color-theme--heading--default: $color-theme--text;

/// Set heading values in a map
/// * recommended size is pulled from get-font-size()
/// * line-height is normal unitless line height
/// * margin-top and margin-bottom are calculated as a percentage of a base line `$base-line-em`
/// * margin-top and margin-bottom are only used if `$headings-calc-margins` is set to true
/// @example
///   h1: (
///     size: get-font-size(5),
///     line-height: 1.1,
///     margin-top: 0.5, // Percentage of $base-line-em
///     margin-bottom: 0.5 // Percentage of $base-line-em
///   ),
$heading-typography: (
  h1: (
    size: get-font-size(5),
    line-height: 1.1,
    margin-top: 0.5,
    margin-bottom: 0.5
  ),
  h2: (
    size: get-font-size(4),
    line-height: 1.1,
    margin-top: 0.5,
    margin-bottom: 0.5
  ),
  h3: (
    size: get-font-size(3),
    line-height: 1.1,
    margin-top: 0.5,
    margin-bottom: 0.5
  ),
  h4: (
    size: get-font-size(2),
    line-height: 1.3,
    margin-top: 0.25,
    margin-bottom: 0.25
  ),
  h5: (
    size: get-font-size(1),
    line-height: 1.5,
    margin-top: 0.25,
    margin-bottom: 0.25
  ),
  h6: (
    size: get-font-size(0),
    line-height: 1.5,
    margin-top: 0.25,
    margin-bottom: 0.25
  )
);


/// link color (inactive)
/// @type color
$color-theme--link-a: get-color(blue, faded);
/// link color (active)
/// @type color
$color-theme--link-b: get-color(blue, light);

/// Set link colors and parameters in a map
/// * Three link type options
///   * __normal__ - standard underlined link
///   * __border__ - use `bottom-border` to underline link
///   * __faux-underline__ - use `background-image` and `text-shadow` to underline link, with descenders gracefully breaking the line
/// * underline and faux-underline accept a `size` value
/// * faux-underline accepts a `background-color` value, for the for the color behind the link
$color-theme--link-map: (
  normal: (
    initial: $color-theme--link-a,
    active: $color-theme--link-a,
    visited: $color-theme--link-a,
    hover: $color-theme--link-b,
    focus: $color-theme--link-b,
  ),
  border: (
    initial: $color-theme--link-a,
    active: $color-theme--link-a,
    visited: $color-theme--link-a,
    hover: $color-theme--link-b,
    focus: $color-theme--link-b,
    size: 1px
  ),
  faux-underline: (
    initial: $color-theme--link-a,
    active: $color-theme--link-a,
    visited: $color-theme--link-a,
    hover: $color-theme--link-b,
    focus: $color-theme--link-b,
    size: 1px,
    background-color: $color-theme--background
  )
);
